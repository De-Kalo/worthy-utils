name: Backup to External GitHub Account

on:
  push:
    branches:
      - '**'  # Triggers on push to any branch

jobs:
  backup:
    runs-on: ubuntu-latest
    if: github.repository_owner != 'worthy-backups'  # Skip if the owner matches the secret

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all branches
          token: ${{ secrets.BACKUP_GITHUB_TOKEN }}

      - name: Set up Git
        run: |
          echo "Setting up Git configuration"
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Create Backup Repository if Not Exists
        run: |
          BACKUP_REPO_NAME="${{ github.event.repository.name }}"
          BACKUP_REPO_URL="https://api.github.com/repos/worthy-backups/$BACKUP_REPO_NAME"

          # Check if the backup repository exists
          if ! curl -s -o /dev/null -w "%{http_code}" $BACKUP_REPO_URL | grep -q "200"; then
            echo "Backup repository does not exist. Creating..."
            curl -X POST -H "Authorization: token ${{ secrets.BACKUP_GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" \
            -d "{\"name\":\"$BACKUP_REPO_NAME\", \"private\": true}" "https://api.github.com/orgs/worthy-backups/repos"
          else
            echo "Backup repository already exists."
          fi          

      - name: Create backup branch if it doesn't exist
        id: create_branch
        run: |
          echo "Checking if backup branch exists"
          # Extract the branch name from github.ref
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "Branch name: $BRANCH_NAME"

          # Check if the branch exists
          if git show-ref --verify --quiet refs/heads/$BRANCH_NAME; then
            echo "Branch '$BRANCH_NAME' already exists."
          else
            echo "Creating branch '$BRANCH_NAME'."
            git checkout -b $BRANCH_NAME
          fi

          # Set the branch name as an environment variable
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Add backup remote
        run: |
          echo "Adding remote backup repository"
          git remote add backup https://${{ secrets.BACKUP_GITHUB_TOKEN }}@github.com/worthy-backups/${{ github.event.repository.name }}.git
          git remote -v  # List remotes to verify

      - name: Push to backup repository
        run: |
          echo "Pushing to remote repository"
          git push backup $BRANCH_NAME --force
